# Log upstream errors verbosely to container logs
error_log /dev/stderr info;

server {
  listen 80 default_server;
  listen [::]:80 default_server;

  # Static files (built SPA)
  root /usr/share/nginx/html;
  index index.html;

  # Use Docker's embedded DNS and re-resolve periodically
  # valid=5s keeps answers fresh; ipv6 off to avoid AAAA noise
  resolver 127.0.0.11 ipv6=off valid=5s;
  resolver_timeout 5s;

  # ---------- Upstream (dynamic DNS) ----------
  # 'resolve' tells nginx to DNS-resolve the name when needed
  upstream api_upstream {
    zone api_zone 64k;
    server server:3000 resolve;
    keepalive 16;
  }

  # ---------- API proxy ----------
  location /api/ {
    proxy_pass http://api_upstream;

    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Connection "";

    proxy_connect_timeout 5s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # On transient upstream errors/timeouts, retry another connection
    proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
    proxy_next_upstream_tries 3;
  }

  # ---------- Static assets with long cache ----------
  location ~* \.(?:css|js|mjs|woff2?|ttf|eot|ico|svg|png|jpg|jpeg|gif|webp)$ {
    try_files $uri =404;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000, immutable";
  }

  # ---------- SPA fallback ----------
  location / {
    try_files $uri $uri/ /index.html;
  }
}
