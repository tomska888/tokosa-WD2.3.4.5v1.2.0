name: CI/CD

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci --workspaces
      - name: Run migrations
        env:
          TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
        run: npm run test:coverage -w server
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Build backend image
        run: docker build -t server:latest server
      - name: Build frontend image
        run: docker build -t client:latest client
      - name: Push backend image
        run: aws lightsail push-container-image --service-name ${{ secrets.LIGHTSAIL_SERVICE_NAME }} --label server --image server:latest
      - name: Push frontend image
        run: aws lightsail push-container-image --service-name ${{ secrets.LIGHTSAIL_SERVICE_NAME }} --label client --image client:latest
      - name: Render containers.json
        run: envsubst < lightsail/containers.json > containers.rendered.json
        env:
          LIGHTSAIL_SERVICE_NAME: ${{ secrets.LIGHTSAIL_SERVICE_NAME }}
      - name: Deploy to Lightsail
        run: |
          aws lightsail create-container-service-deployment \
            --service-name ${{ secrets.LIGHTSAIL_SERVICE_NAME }} \
            --containers file://containers.rendered.json \
            --public-endpoint file://lightsail/public-endpoint.json