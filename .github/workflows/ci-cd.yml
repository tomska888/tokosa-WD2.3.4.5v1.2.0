name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: eu-central-1
  LIGHTSAIL_SERVICE_NAME: ${{ secrets.LIGHTSAIL_SERVICE_NAME }}

jobs:
  build_test_deploy:
    runs-on: ubuntu-latest

    # Use Neon for tests
    env:
      NODE_ENV: test
      TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            server/package-lock.json
            client/package-lock.json

      # ---- IMPORTANT: install at repo root so workspace devDeps (e.g. @tsconfig/node18, @types/*) are available ----
      - name: Install all workspaces
        run: npm ci || npm i

      # ---- Migrate & test against Neon TEST DB ----
      - name: Run server migrations (test DB)
        working-directory: server
        env:
          NODE_ENV: test
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        run: npm run migrate

      - name: Run server tests (coverage)
        working-directory: server
        env:
          NODE_ENV: test
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          JWT_SECRET: test-secret
        run: npm run test:coverage

      - name: Lint client
        working-directory: client
        run: npm run lint

      # ── Build local Docker images ───────────────────────────────────────────
      - name: Set tag
        id: vars
        run: echo "TAG=${GITHUB_SHA::12}" >> $GITHUB_OUTPUT

      - name: Build server image
        run: docker build -t server:${{ steps.vars.outputs.TAG }} ./server

      - name: Build client image
        run: docker build -t client:${{ steps.vars.outputs.TAG }} ./client

      # ── Push to Lightsail registry ─────────────────────────────────────────
      - name: Install lightsailctl
        run: |
          curl -Lo lightsailctl https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl
          chmod +x lightsailctl
          sudo mv lightsailctl /usr/local/bin/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Push server image to Lightsail
        run: |
          aws lightsail push-container-image \
            --service-name "$LIGHTSAIL_SERVICE_NAME" \
            --label server \
            --image server:${{ steps.vars.outputs.TAG }}

      - name: Push client image to Lightsail
        run: |
          aws lightsail push-container-image \
            --service-name "$LIGHTSAIL_SERVICE_NAME" \
            --label client \
            --image client:${{ steps.vars.outputs.TAG }}

      # ── Prod migration on Neon (DATABASE_URL) ──────────────────────────────
      - name: Run server migrations (prod DB)
        working-directory: server
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npm run migrate

      # ── Generate deployment specs ──────────────────────────────────────────
      - name: Generate containers.json
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET:   ${{ secrets.JWT_SECRET }}
        run: |
            cat > containers.json <<EOF
            {
              "server": {
                "image": ":${LIGHTSAIL_SERVICE_NAME}.server.latest",
                "ports": { "3000": "HTTP" },
                "environment": {
                  "NODE_ENV": "production",
                  "PORT": "3000",
                  "DATABASE_URL": "${DATABASE_URL}",
                  "JWT_SECRET":   "${JWT_SECRET}"
                }
              },
              "client": {
                "image": ":${LIGHTSAIL_SERVICE_NAME}.client.latest",
                "ports": { "80": "HTTP" },
                "environment": {
                  "BACKEND_HOST": "127.0.0.1",
                  "BACKEND_PORT": "3000"
                }
              }
            }
            EOF

      - name: Generate public-endpoint.json (client public)
        run: |
          cat > public-endpoint.json <<'EOF'
          {
            "containerName": "client",
            "containerPort": 80,
            "healthCheck": {
              "path": "/health",
              "intervalSeconds": 10,
              "timeoutSeconds": 5,
              "healthyThreshold": 2,
              "unhealthyThreshold": 5,
              "successCodes": "200-499"
            }
          }
          EOF

      - name: Deploy to Lightsail
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          aws lightsail create-container-service-deployment \
            --service-name "$LIGHTSAIL_SERVICE_NAME" \
            --containers file://containers.json \
            --public-endpoint file://public-endpoint.json
