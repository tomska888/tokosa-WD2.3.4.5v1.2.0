name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch: {}

jobs:
  test:
    name: Test on Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16.x, 18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}-

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Run tests
        run: npm test -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build

  deploy:
    name: Deploy to Amazon Lightsail
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install dependencies for deployment
        run: |
          sudo apt-get update
          sudo apt-get install -y jq rsync unzip

      - name: Retrieve Lightsail access details
        run: |
          aws lightsail get-instance-access-details \
            --instance-name ${{ secrets.LIGHTSAIL_SERVICE_NAME }} \
            --protocol ssh > access.json

      - name: Deploy to Lightsail via SSH
        run: |
          HOST=$(jq -r .accessDetails.ipAddress access.json)
          echo "${{ secrets.LIGHTSAIL_SSH_KEY }}" > lightsail_key.pem
          chmod 600 lightsail_key.pem
          rsync -avz -e "ssh -i lightsail_key.pem -o StrictHostKeyChecking=no" build/ ubuntu@$HOST:/home/ubuntu/app
          ssh -i lightsail_key.pem -o StrictHostKeyChecking=no ubuntu@$HOST \
            "cd /home/ubuntu/app && npm ci --production && pm2 restart all"
